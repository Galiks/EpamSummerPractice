//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан по шаблону.
//
//     Изменения, вносимые в этот файл вручную, могут привести к непредвиденной работе приложения.
//     Изменения, вносимые в этот файл вручную, будут перезаписаны при повторном создании кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TryMVC
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class OlympicsEntities1 : DbContext
    {
        public OlympicsEntities1()
            : base("name=OlympicsEntities1")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Award> Awards { get; set; }
        public virtual DbSet<User> Users { get; set; }
        public virtual DbSet<User_Award> User_Award { get; set; }
    
        public virtual ObjectResult<Nullable<decimal>> AddAward(string tITLE, string dESCRIPTION, byte[] iMAGE)
        {
            var tITLEParameter = tITLE != null ?
                new ObjectParameter("TITLE", tITLE) :
                new ObjectParameter("TITLE", typeof(string));
    
            var dESCRIPTIONParameter = dESCRIPTION != null ?
                new ObjectParameter("DESCRIPTION", dESCRIPTION) :
                new ObjectParameter("DESCRIPTION", typeof(string));
    
            var iMAGEParameter = iMAGE != null ?
                new ObjectParameter("IMAGE", iMAGE) :
                new ObjectParameter("IMAGE", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("AddAward", tITLEParameter, dESCRIPTIONParameter, iMAGEParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> AddUser(string name, Nullable<System.DateTime> birthday, Nullable<int> age, byte[] iMAGE)
        {
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var birthdayParameter = birthday.HasValue ?
                new ObjectParameter("Birthday", birthday) :
                new ObjectParameter("Birthday", typeof(System.DateTime));
    
            var ageParameter = age.HasValue ?
                new ObjectParameter("Age", age) :
                new ObjectParameter("Age", typeof(int));
    
            var iMAGEParameter = iMAGE != null ?
                new ObjectParameter("IMAGE", iMAGE) :
                new ObjectParameter("IMAGE", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("AddUser", nameParameter, birthdayParameter, ageParameter, iMAGEParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> DeleteAward(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("DeleteAward", iDParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> DeleteUser(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("DeleteUser", iDParameter);
        }
    
        public virtual ObjectResult<GetAwardByID_Result> GetAwardByID(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAwardByID_Result>("GetAwardByID", iDParameter);
        }
    
        public virtual ObjectResult<GetAwardByLetter_Result> GetAwardByLetter(string lETTER)
        {
            var lETTERParameter = lETTER != null ?
                new ObjectParameter("LETTER", lETTER) :
                new ObjectParameter("LETTER", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAwardByLetter_Result>("GetAwardByLetter", lETTERParameter);
        }
    
        public virtual ObjectResult<GetAwardByTitle_Result> GetAwardByTitle(string tITLE)
        {
            var tITLEParameter = tITLE != null ?
                new ObjectParameter("TITLE", tITLE) :
                new ObjectParameter("TITLE", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAwardByTitle_Result>("GetAwardByTitle", tITLEParameter);
        }
    
        public virtual ObjectResult<GetAwardByWord_Result> GetAwardByWord(string wORD)
        {
            var wORDParameter = wORD != null ?
                new ObjectParameter("WORD", wORD) :
                new ObjectParameter("WORD", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAwardByWord_Result>("GetAwardByWord", wORDParameter);
        }
    
        public virtual ObjectResult<GetAwardFromUser_Award_Result> GetAwardFromUser_Award(Nullable<int> iD_USER)
        {
            var iD_USERParameter = iD_USER.HasValue ?
                new ObjectParameter("ID_USER", iD_USER) :
                new ObjectParameter("ID_USER", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAwardFromUser_Award_Result>("GetAwardFromUser_Award", iD_USERParameter);
        }
    
        public virtual ObjectResult<GetAwards_Result> GetAwards()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAwards_Result>("GetAwards");
        }
    
        public virtual ObjectResult<GetUserByID_Result> GetUserByID(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetUserByID_Result>("GetUserByID", iDParameter);
        }
    
        public virtual ObjectResult<GetUserByLetter_Result> GetUserByLetter(string lETTER)
        {
            var lETTERParameter = lETTER != null ?
                new ObjectParameter("LETTER", lETTER) :
                new ObjectParameter("LETTER", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetUserByLetter_Result>("GetUserByLetter", lETTERParameter);
        }
    
        public virtual ObjectResult<GetUserByName_Result> GetUserByName(string nAME)
        {
            var nAMEParameter = nAME != null ?
                new ObjectParameter("NAME", nAME) :
                new ObjectParameter("NAME", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetUserByName_Result>("GetUserByName", nAMEParameter);
        }
    
        public virtual ObjectResult<GetUserByWord_Result> GetUserByWord(string wORD)
        {
            var wORDParameter = wORD != null ?
                new ObjectParameter("WORD", wORD) :
                new ObjectParameter("WORD", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetUserByWord_Result>("GetUserByWord", wORDParameter);
        }
    
        public virtual ObjectResult<GetUsers_Result> GetUsers()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetUsers_Result>("GetUsers");
        }
    
        public virtual ObjectResult<Nullable<decimal>> Rewarding(Nullable<int> iD_user, Nullable<int> iD_award)
        {
            var iD_userParameter = iD_user.HasValue ?
                new ObjectParameter("ID_user", iD_user) :
                new ObjectParameter("ID_user", typeof(int));
    
            var iD_awardParameter = iD_award.HasValue ?
                new ObjectParameter("ID_award", iD_award) :
                new ObjectParameter("ID_award", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("Rewarding", iD_userParameter, iD_awardParameter);
        }
    
        public virtual int UpdateAward(Nullable<int> iD, string tITLE, string dESCRIPTION, byte[] iMAGE)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var tITLEParameter = tITLE != null ?
                new ObjectParameter("TITLE", tITLE) :
                new ObjectParameter("TITLE", typeof(string));
    
            var dESCRIPTIONParameter = dESCRIPTION != null ?
                new ObjectParameter("DESCRIPTION", dESCRIPTION) :
                new ObjectParameter("DESCRIPTION", typeof(string));
    
            var iMAGEParameter = iMAGE != null ?
                new ObjectParameter("IMAGE", iMAGE) :
                new ObjectParameter("IMAGE", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateAward", iDParameter, tITLEParameter, dESCRIPTIONParameter, iMAGEParameter);
        }
    
        public virtual int UpdateUser(Nullable<int> iD, string nAME, Nullable<System.DateTime> bIRTHDAY, Nullable<int> aGE, byte[] iMAGE)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var nAMEParameter = nAME != null ?
                new ObjectParameter("NAME", nAME) :
                new ObjectParameter("NAME", typeof(string));
    
            var bIRTHDAYParameter = bIRTHDAY.HasValue ?
                new ObjectParameter("BIRTHDAY", bIRTHDAY) :
                new ObjectParameter("BIRTHDAY", typeof(System.DateTime));
    
            var aGEParameter = aGE.HasValue ?
                new ObjectParameter("AGE", aGE) :
                new ObjectParameter("AGE", typeof(int));
    
            var iMAGEParameter = iMAGE != null ?
                new ObjectParameter("IMAGE", iMAGE) :
                new ObjectParameter("IMAGE", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateUser", iDParameter, nAMEParameter, bIRTHDAYParameter, aGEParameter, iMAGEParameter);
        }
    }
}
